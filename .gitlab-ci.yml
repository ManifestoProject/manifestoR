prepare_environment:
  stage: prepare
  script:
    - R -e "dir.create('~/.Rlib-dev')"
    - (export R_LIBS_USER='~/.Rlib-dev'; export R_LIBS_SITE='~/.Rlib-dev'; R --vanilla -e "options(repos = 'http://r-cran.manifesto-project.wzb.eu'); install.packages('devtools', lib = '~/.Rlib-dev'); library(devtools); withr::with_libpaths('~/.Rlib-dev', {install.packages('pkgconfig', lib = '~/.Rlib-dev'); install_github('krlmlr/plogr'); install_github('krlmlr/bindrcpp'); install_github('hadley/dplyr')}); install_deps(dependencies = c('Depends', 'Imports','Suggests'), lib = '~/.Rlib-dev');")

compile_vignette:
  stage: vignette
  script:
    - echo $MANIFESTOAPIKEY > tests/manifesto_apikey.txt
    - mkdir -p inst/doc
    - R -e "library(magrittr); 'DESCRIPTION' %>% readLines() %>% { gsub('(VignetteBuilder.)\\\\sR.rsp', '\\\\1 knitr', .) } %>% writeLines('DESCRIPTION')"
    - cat DESCRIPTION
    - R --vanilla -e "library(devtools); with_libpaths('~/.Rlib-dev', build_vignettes());"
    - cp inst/doc/manifestoRworkflow.pdf vignettes/
    - R -e "library(magrittr); 'DESCRIPTION' %>% readLines() %>% { gsub('(VignetteBuilder.)\\\\sknitr', '\\\\1 R.rsp', .) } %>% writeLines('DESCRIPTION')"
  artifacts:
    paths:
      - vignettes/manifestoRworkflow.pdf
      - inst/doc/manifestoRworkflow.pdf
      
test_manifestoR:
  stage: test
  script:
    - echo $MANIFESTOAPIKEY > tests/manifesto_apikey.txt
    - R --vanilla -e "library(devtools); library(withr); withr::with_libpaths('~/.Rlib-dev', { document(); library(testthat); test(reporter = 'stop') })"

pack_manifestoR:
  dependencies:
    - compile_vignette
  stage: pack
  script:
    - echo $MANIFESTOAPIKEY > tests/manifesto_apikey.txt
    - cp inst/doc/manifestoRworkflow.pdf vignettes/
    - R -e "library(magrittr); 'DESCRIPTION' %>% readLines() %>% { gsub('(VignetteBuilder.)\\\\sknitr', '\\\\1 R.rsp', .) } %>% writeLines('DESCRIPTION')"
    - R --vanilla -e "library(devtools); library(withr); withr::with_libpaths('~/.Rlib-dev', { document(); pkg_path <- build(path = './'); file.copy(pkg_path, 'manifestoR.tar.gz'); file.copy(pkg_path, '/srv/r-cran.manifesto-project.wzb.eu/src/contrib/');  library(miniCRAN); updateRepoIndex('/srv/r-cran.manifesto-project.wzb.eu/')})"
    - (export R_LIBS_SITE='~/.Rlib-dev';  R -e ".libPaths()"; R CMD check --as-cran manifestoR.tar.gz > check_results.txt)
    - cat check_results.txt
  artifacts:
    paths:
    - manifestoR.tar.gz
    - check_results.txt

stages:
  - prepare
  - test
  - vignette
  - pack
